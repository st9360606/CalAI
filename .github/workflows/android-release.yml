name: Android Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-release:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 21 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3

      # ★ 把檔案還原到 repo 根的 keystore/，對齊 storeFile=keystore/calai-release.jks
      - name: Restore keystore & props
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p keystore
          printf "%s" "${{ secrets.KEYSTORE_PROPERTIES }}" > keystore/keystore.properties
          printf "%s" "${{ secrets.KEYSTORE_JKS_BASE64 }}" | base64 -d > keystore/calai-release.jks
          echo "== storeFile in props ==" && grep -E '^storeFile=' keystore/keystore.properties || true
          test -f keystore/calai-release.jks || (echo "::error::JKS missing at keystore/calai-release.jks"; ls -la keystore; exit 1)

      - name: Build prodRelease (APK & AAB)
        run: |
          ./gradlew :app:clean :app:assembleProdRelease :app:bundleProdRelease --stacktrace

      # 可選的驗簽：找得到 apksigner 就印證書；找不到不會讓 job fail
      - name: Verify signatures & print certs
        shell: bash
        run: |
          set -euo pipefail
          APK=$(ls app/build/outputs/apk/prod/release/*.apk | head -n 1)
          AAB=$(ls app/build/outputs/bundle/prodRelease/*.aab | head -n 1)

          find_apksigner() {
            if command -v apksigner >/dev/null 2>&1; then command -v apksigner; return; fi
            CANDS=()
            [ -n "${ANDROID_SDK_ROOT:-}" ] && CANDS+=("$ANDROID_SDK_ROOT")
            [ -n "${ANDROID_HOME:-}" ] && CANDS+=("$ANDROID_HOME")
            [ -d "$HOME/Android/Sdk" ] && CANDS+=("$HOME/Android/Sdk")
            [ -d "/usr/local/lib/android/sdk" ] && CANDS+=("/usr/local/lib/android/sdk")
            [ -d "/opt/android-sdk" ] && CANDS+=("/opt/android-sdk")
            for SDK in "${CANDS[@]}"; do
              C=$(find "$SDK/build-tools" -type f -name apksigner 2>/dev/null | sort | tail -n 1 || true)
              [ -n "$C" ] && echo "$C" && return
            done
          }

          APKSIGNER="$(find_apksigner || true)"
          if [ -n "$APKSIGNER" ]; then
            echo "== APK sign info =="
            if ! "$APKSIGNER" verify --print-certs "$APK"; then
              echo "::warning::APK signature verification failed. Listing META-INF:"
              unzip -l "$APK" | sed -n '1,10p;/META-INF/p' || true
            fi
          else
            echo "::warning::apksigner not found. Skipping APK cert print."
          fi

          echo "== AAB sign info =="
          keytool -printcert -jarfile "$AAB" || echo "::warning::keytool printcert failed for AAB."

      - name: Upload prodRelease artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prodRelease
          path: |
            app/build/outputs/apk/prod/release/*.apk
            app/build/outputs/bundle/prodRelease/*.aab
            app/build/outputs/mapping/**/mapping.txt
          if-no-files-found: error
          retention-days: 14
